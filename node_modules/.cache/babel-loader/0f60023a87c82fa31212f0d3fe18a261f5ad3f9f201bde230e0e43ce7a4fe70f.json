{"ast":null,"code":"var _jsxFileName = \"/Users/victorrippi/Documents/catalogo_digital/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../components/Login.css';\nimport logo from '../assets/logotipo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Estado para armazenar a mensagem de erro\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://127.0.0.1:3333/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        navigate(\"/home\");\n      } else {\n        // Credenciais inv치lidas, definir a mensagem de erro\n        setErrorMessage(\"Credenciais inv치lidas, por favor tente novamente.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formLogin\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"logotipo\",\n        width: \"230px\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Digite os seus dados de acesso no campo abaixo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Digite seu e-mail\",\n        autoFocus: true,\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Digite sua senha\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 34\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: '#',\n        children: \"Entrar em contato com o administrador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Acessar\",\n        className: \"btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"luEppbUrbaXdbCQOiVa4a5iz6js=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","logo","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","error","console","className","children","onSubmit","src","width","alt","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","autoFocus","value","onChange","target","href","_c","$RefreshReg$"],"sources":["/Users/victorrippi/Documents/catalogo_digital/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../components/Login.css';\nimport logo from '../assets/logotipo.png';\n\nfunction Login() {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\"); // Estado para armazenar a mensagem de erro\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await fetch(\"http://127.0.0.1:3333/login\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n            if (response.ok) {\n                navigate(\"/home\");\n            } else {\n                // Credenciais inv치lidas, definir a mensagem de erro\n                setErrorMessage(\"Credenciais inv치lidas, por favor tente novamente.\");\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <div className=\"page\">\n            <form className=\"formLogin\" onSubmit={handleLogin}>\n                <img src={logo} className={\"logotipo\"} width={\"230px\"} alt=\"Logo\" />\n                <h1>Entrar</h1>\n                <p>Digite os seus dados de acesso no campo abaixo.</p>\n                <label htmlFor=\"email\">E-mail</label>\n                <input\n                    type=\"email\"\n                    placeholder=\"Digite seu e-mail\"\n                    autoFocus={true}\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <label htmlFor=\"password\">Senha</label>\n                <input\n                    type=\"password\"\n                    placeholder=\"Digite sua senha\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>} {/* Exibir a mensagem de erro, se houver */}\n                <a href={'#'}>Entrar em contato com o administrador</a>\n                <input type=\"submit\" value=\"Acessar\" className=\"btn\" />\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}